test compile
target x86_64 machinst

; regex: REG=%r\S+
; regex: XMM=%xmm\d+

function %f0(i64, i64) -> i64, i64 {
block0(v0: i64, v1: i64):
    v2 = load.i64 v1
; check:  movq    0(%rsi), $(r1=$REG)

    v3 = icmp eq v0, v2

    v4 = bint.i64 v3
; nextln: cmpq    $r1, %rdi
; nextln: setz
; nextln: movzbq

    v5 = select.i64 v3, v0, v1
; nextln: cmpq    $r1, %rdi
; check:  cmovzq

    return v4, v5
}

function %f1(f64, i64) -> i64, f64 {
block0(v0: f64, v1: i64):
    v2 = load.f64 v1
; check:  movsd   0(%rdi), $(r1=$XMM)

    v3 = fcmp eq v0, v2

    v4 = bint.i64 v3
; nextln: ucomisd
; nextln: setnp
; nextln: setz
; nextln: andl
; nextln: movzbq

    v5 = select.f64 v3, v0, v0
; nextln: ucomisd
; check:  jnp $$next; movsd $XMM, $XMM; $$next:
; nextln: jz $$next; movsd $XMM, $XMM; $$next:

    return v4, v5
}
